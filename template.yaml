AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  espresso-brew-backend

  Sample SAM Template for espresso-brew-backend

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  EspressoBackendDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: GSI-SK
          Projection:
            ProjectionType: ALL
          KeySchema:
            - AttributeName: SK
              KeyType: HASH

  EspressoBackendApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Description: The Dev stage for the Espresso Backend API
      Cors:
        AllowMethods: "'*'"

  CoffeeBeanModelFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: coffee_bean_model/
      Tracing: Active
      Handler: app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref EspressoBackendDynamoDBTable
          POWERTOOLS_SERVICE_NAME: coffee_bean_model_function
      Architectures:
        - x86_64
      Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPython:11
      Policies:
        - Statement:
            - Sid: AllowAccessToDynamoDB
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:Query
                - dynamodb:GetItem
                - dynamodb:DeleteItem
                - dynamodb:UpdateItem
              Resource:
                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${EspressoBackendDynamoDBTable}
                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${EspressoBackendDynamoDBTable}/index/*
      Events:
        EspressoBackendRootApi:
          Type: Api
          Properties:
            Path: /coffee-beans
            Method: ANY
            RestApiId: !Ref EspressoBackendApi
        EspressoBackendGreedyApi:
          Type: Api
          Properties:
            Path: /coffee-beans/{proxy+}
            Method: ANY
            RestApiId: !Ref EspressoBackendApi

Outputs:
  EspressoBackendApi:
    Description: "API Gateway endpoint URL for Dev stage for Espresso Backend API"
    Value: !Sub "https://${EspressoBackendApi}.execute-api.${AWS::Region}.amazonaws.com/Dev"
  CoffeeBeanModelFunctionArn:
    Description: "Coffee Bean Model Lambda Function ARN"
    Value: !GetAtt CoffeeBeanModelFunction.Arn
  CoffeeBeanModelFunctionIamRoleArn:
    Description: "Implicit IAM Role created for Coffee Bean Model Lambda function"
    Value: !GetAtt CoffeeBeanModelFunctionRole.Arn
